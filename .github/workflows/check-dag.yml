name: Check and Merge DAG

on:
  push:
    branches:
      - 'dag/*'

jobs:
  test_and_merge:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          pip install apache-airflow[cncf.kubernetes,pandas,virtualenv]

      - name: Validate Python files
        run: |
          if ls *.py > /dev/null 2>&1; then
              for dag in *.py; do
                  echo "Validating Python file: $dag"
                  python -m py_compile "$dag" || exit 1

                  # Проверка наличия обязательных переменных
                  if ! grep -q 'dag_id' "$dag"; then
                      echo "ERROR: 'dag_id' not found in $dag"
                      exit 1
                  fi

                  if ! grep -q 'start_date' "$dag"; then
                      echo "ERROR: 'start_date' not found in $dag"
                      exit 1
                  fi

                  if ! grep -q 'Task' "$dag"; then
                      echo "ERROR: No tasks defined in $dag"
                      exit 1
                  fi

                  echo "DAG structure is valid: $dag"
              done
          else
              echo "No Python files found."
              exit 1
          fi

      - name: Check for necessary imports
        run: |
          if ls *.py > /dev/null 2>&1; then
              for dag in *.py; do
                  echo "Checking imports in $dag"
                  
                  # Проверка на наличие импорта airflow и других обязательных модулей
                  if ! grep -q 'import airflow' "$dag" && ! grep -q 'from airflow' "$dag"; then
                      echo "ERROR: 'import airflow' or 'from airflow' not found in $dag"
                      exit 1
                  fi

                  if ! grep -q 'from airflow.operators' "$dag"; then
                      echo "ERROR: No operators imported in $dag"
                      exit 1
                  fi

                  echo "Imports are correct in $dag"
              done
          else
              echo "No Python files found."
              exit 1
          fi

      - name: Check for valid start_date in DAG
        run: |
          if ls *.py > /dev/null 2>&1; then
              for dag in *.py; do
                  echo "Checking start_date in $dag"
                  
                  # Проверка на наличие правильной даты в start_date
                  if ! grep -q 'start_date' "$dag"; then
                      echo "ERROR: 'start_date' not found in $dag"
                      exit 1
                  fi
                  
                  # Проверка на правильный формат даты
                  if ! grep -Pq 'start_date\s*=\s*datetime' "$dag"; then
                      echo "ERROR: Invalid start_date format in $dag"
                      exit 1
                  fi

                  echo "start_date is valid in $dag"
              done
          else
              echo "No Python files found."
              exit 1
          fi

      - name: Create Pull Request
        id: create_pr
        uses: peter-evans/create-pull-request@v5
        with:
          commit-message: "Validated and merging DAG into main"
          branch: main
          title: "Merging new DAG: ${{ github.ref_name }}"
          body: |
            This pull request contains a new or updated DAG:
            - DAG Name: ${{ github.ref_name }}
          labels: validated-dag

      - name: Auto-Merge Pull Request
        if: success() && steps.create_pr.outputs.pull-request-url != ''
        uses: pascalgn/automerge-action@v0.15.5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          merge-method: squash
